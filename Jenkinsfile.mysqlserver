pipeline {
  agent 'any'
  tools {
    jdk 'java8'
    maven 'maven'
  }
    parameters {
      choice(
        name: 'Environment',
        choices: ['dev','prod'],
        description: 'Choose Environment'
      )
    }
    stages {
        stage('Setup MySQL for Dev'){
            when {
                expression { params.Environment == 'dev' }
            } 
            stages {
                stage('Initialize Terraform') {
                    steps {   
                        dir("terraform_code/terraform.dev"){
                            sh "terraform init"
                        }
                    }
                }
                stage('Lint Terraform') {
                    steps {
                        dir("terraform_code/terraform.dev"){
                            sh "terraform fmt"
                        }
                    }
                }
                stage('Plan Terraform') {
                    steps {
                        dir("terraform_code/terraform.dev"){
                            sh "terraform plan -out mytfplan"
                        }
                    }
                }
                stage('Execute Terraform Code') {
                    steps {
                        dir("terraform_code/terraform.dev"){
                            sh "terraform apply -auto-approve mytfplan" 
                        }
                    }
                }
	        stage('Save the IP') {
                    steps {
                        dir("terraform_code/terraform.dev"){
                            sh "terraform output Instance_IP > instance_ip_dev"
                            archiveArtifacts "terraform_code/terraform.dev/instance_ip_dev"
                        }
                    }
                }
            }
        }
        stage('Setup MySQL for Prod'){
            when {
                expression { params.Environment == 'prod' }
            }
            stages {
                stage('Initialize Terraform') {
                    steps {
                        dir("terraform_code/terraform.prod"){
                            sh "terraform init"
                        }
                    }
                }
                stage('Formatting') {
                    steps {
                        dir("terraform_code/terraform.prod"){
                            sh "terraform fmt"
                        }
                    }
                }
                stage('Plan Terraform') {
                    steps {
                        dir("terraform_code/terraform.prod"){
                            sh "terraform plan -out mytfplan"
                        }
                    }
                }
                stage('Execute Terraform') {
                    steps {
                        dir("terraform_code/terraform.prod"){
                            sh "terraform apply -auto-approve mytfplan"
                        }
                    }
                }
                stage('Archive IP') {
                    steps {
                        dir("terraform_code/terraform.prod"){
                            sh "terraform output Instance_IP > instance_ip_prod"
                            archiveArtifacts "terraform_code/terraform.prod/instance_ip_prod"
                        }
                    }
                }
            }
        }
        stage('Execute Ansible Playbook on Dev') {
            when {
                expression { params.Environment == 'dev' }
            }
            steps { 
                script{
                    sleep 20
                    sh 'sed -i \'s/"//g\' terraform_code/terraform.dev/instance_ip_dev && hostip_dev=$(cat terraform_code/terraform.dev/instance_ip_dev) && cd ansible && ansible-playbook -i hosts mysqlsetup.yml --extra-vars "ansible_host=${hostip_dev}"'
                }
            }
        }
        stage('Execute Ansible Playbook on Prod') {
            when {
                expression { params.Environment == 'prod' }
            }
            steps {
                script{
                    sleep 20
                    sh 'sed -i \'s/"//g\' terraform_code/terraform.prod/instance_ip_prod && hostip_prod=$(cat terraform_code/terraform.prod/instance_ip_prod) && cd ansible && ansible-playbook -i hosts mysqlsetup.yml --extra-vars "ansible_host=${hostip_prod}"'
                }
            }
        }
    }
}

